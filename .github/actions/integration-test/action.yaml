name: integration-test
description: 'action that prepares the integration test setup and runs the provided integration test script'
inputs:
  integration-test-script:
    description: 'file name of integration test script'
    required: true
runs:
  using: "composite"
  steps:
    - name: Install yq and bash
      run: |
        sudo snap install yq
        sudo apt update
        sudo apt install bash -y
      shell: bash
    - name: Create KinD cluster
      run: |
        GO111MODULE="on" go get sigs.k8s.io/kind
        kind create cluster --wait 120s
      shell: bash
    - name: Check KinD cluster
      run: kubectl get nodes
      shell: bash
    - name: Add images to KinD
      run: |
        kind load docker-image $(yq e '.deployment.image' helm/values.yaml)
        kind load docker-image $(yq e '.deployment.helmHookImage' helm/values.yaml)
      shell: bash
    - name: Set environment variables for alerting listener
      run: |
        SERVICE_CONTAINER_ID=\
        $(docker container ls --no-trunc --format "{{json . }}" | \
        jq ' . | select(.Image|match("alerting-endpoint"))' | jq -r .ID)
        docker network connect kind ${SERVICE_CONTAINER_ID}
        ALERTING_ENDPOINT_IP=\
        $(docker network inspect kind | \
        jq -r --arg container_id ${SERVICE_CONTAINER_ID}  '.[].Containers[$container_id].IPv4Address' | \
        sed s+/.*++g)
        echo ALERTING_ENDPOINT_IP=${ALERTING_ENDPOINT_IP} >> $GITHUB_ENV
      shell: bash
    - name: Give it some time ...
      run: sleep 5
      shell: bash
    - name: Run actual integration test
      run: |
        bash tests/integration/${{ inputs.integration-test-script }}
      shell: bash
