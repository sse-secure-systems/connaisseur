name: release

on:
  push:
    tags: "v*"

jobs:
  version-match:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install yq
        run: sudo snap install yq
      - name: Ensure version equality
        run: |
          IMAGE_TAG=$(yq e '.deployment.image' helm/values.yaml| cut -d ':' -f2)
          for COMMIT_TAG in $(git tag --points-at $(git rev-parse HEAD)); do
            if [[ "$IMAGE_TAG" == "$COMMIT_TAG" ]]; then
              exit 0
            fi
          done
          echo "Tag '$IMAGE_TAG' is not within tags of commit: $(git tag --points-at $(git rev-parse HEAD))"
          exit 1

  integration-test:
    runs-on: ubuntu-latest
    needs: [version-match]
    strategy:
      matrix:
        integration-test-arg: ["regular", "cosign", "deployment", "pre-config"]
    services:
      alerting-endpoint:
        image: securesystemsengineering/alerting-endpoint
        ports:
          - 56243:56243
    steps:
      - uses: actions/checkout@v3
      - name: Install yq and Bash
        run: |
          sudo snap install yq
          sudo apt update
          sudo apt install bash -y
      - uses: ./.github/actions/k3s-cluster
        name: Setup K8s cluster
        with:
          k3s-channel: v1.22
      - name: Set environment variables for alerting listener
        run: |
          CONTAINER=$(docker container ls --no-trunc --format "{{json . }}" | jq ' . | select(.Image|match("alerting-endpoint"))')
          CONTAINER_ID=$(echo ${CONTAINER} | jq -r .ID)
          CONTAINER_NETWORK=$(echo ${CONTAINER} | jq -r .Networks)
          SEARCH_PATH=.[0].NetworkSettings.Networks.${CONTAINER_NETWORK}.IPAddress
          ALERTING_ENDPOINT_IP=$(docker container inspect ${CONTAINER_ID} | jq -r ${SEARCH_PATH})
          echo ALERTING_ENDPOINT_IP=${ALERTING_ENDPOINT_IP} >> $GITHUB_ENV
      - name: Configure Connaisseur and show configuration
        run: |
          yq eval -i '.deployment.imagePullPolicy="IfNotPresent"' tests/integration/update.yaml
          echo "::group::values.yaml"
          yq e '.' helm/values.yaml
          echo "::endgroup::"
        shell: bash
      - name: Run actual integration test
        run: |
          bash tests/integration/integration-test.sh "${{ matrix.integration-test-arg }}"
        shell: bash
      - name: Display k8s logs if integration test failed
        if: failure()
        run: |
          kubectl logs -n connaisseur -lapp.kubernetes.io/name=connaisseur --prefix=true
        shell: bash

  publish_chart:
    runs-on: ubuntu-latest
    needs: [version-match, integration-test]
    steps:
      - name: Install Helm and Git
        run: |
          curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
          sudo apt-get install apt-transport-https --yes
          echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm git
      - name: Install yq
        run: sudo snap install yq
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Lint Helm chart
        run: helm lint helm
      - name: Package and upload Helm chart
        run: |
          git config user.name "versioning_user"
          git config user.email "connaisseur@securesystems.dev"
          CHART_VERSION=$(yq e '.version' helm/Chart.yaml)
          helm package helm
          mkdir -p charts
          mv connaisseur*.tgz ./charts
          git checkout gh-pages
          cd charts
          helm repo index . --url https://sse-secure-systems.github.io/connaisseur/charts
          cd ..
          git add ./charts
          git commit -m "Publish helm chart ${CHART_VERSION}"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/sse-secure-systems/connaisseur.git
