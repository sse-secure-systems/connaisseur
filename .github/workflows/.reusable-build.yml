name: build

on:
  workflow_call:
    inputs:
      build:
        description: "Run actual build job?"
        type: boolean
        required: false
        default: true
    outputs:
      cosign_version: 
        description: "Cosign version used for building Connaisseur image"
        value: ${{ jobs.context.outputs.cosign_version }}
      cosign_public_key: 
        description: "Cosign public key used for signing Connaisseur image"
        value: ${{ jobs.build.outputs.cosign_public_key }}
      chart_version: 
        description: "Connaisseur Helm chart version"
        value: ${{ jobs.context.outputs.chart_version }}
      original_registry:
        description: "Public Connaisseur registry"
        value: ${{ jobs.context.outputs.original_registry }}
      original_repo:
        description: "Public Connaisseur repo"
        value: ${{ jobs.context.outputs.original_repo }}
      original_tag:
        description: "Current Connaisseur tag, i.e. version"
        value: ${{ jobs.context.outputs.original_tag }}
      original_image:
        description: "Full Connaisseur image reference, i.e. registry + repository + tag"
        value: ${{ jobs.context.outputs.original_image }}
      build_registry:
        description: "Workflow build registry used for testing"
        value: ${{ jobs.context.outputs.build_registry }}
      build_repo:
        description: "Workflow build repository used for testing"
        value: ${{ jobs.context.outputs.build_repo }}
      build_tag:
        description: "Workflow build tag used for testing (unique for each run)"
        value: ${{ jobs.context.outputs.build_tag }}
      branch_tag:
        description: "Branch tag used for all builds on branch"
        value: ${{ jobs.context.outputs.branch_tag }}
      build_image:
        description: "Workflow build image used for testing, i.e. registry + repository + tag"
        value: ${{ jobs.context.outputs.build_image }}
      build_labels:
        description: "Repository- and workflow-specific build labels"
        value: ${{ jobs.context.outputs.build_labels }}

permissions: {}

jobs:
  context:
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      cosign_version: ${{ steps.get_context.outputs.cosign_version }}
      chart_version: ${{ steps.get_context.outputs.chart_version }}
      original_registry: ${{ steps.get_context.outputs.original_registry }}
      original_repo: ${{ steps.get_context.outputs.original_repo }}
      original_tag: ${{ steps.get_context.outputs.original_tag }}
      original_image: ${{ steps.get_context.outputs.original_image }}
      build_registry: ${{ steps.get_context.outputs.build_registry }}
      build_repo: ${{ steps.get_context.outputs.build_repo }}
      build_tag: ${{ steps.get_context.outputs.build_tag }}
      ref_tags: ${{ steps.get_context.outputs.ref_tags }}
      build_image: ${{ steps.get_context.outputs.build_image }}
      build_labels: ${{ steps.get_context.outputs.build_labels }}
    steps:
      - name: Checkout code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - name: Get context
        id: get_context
        uses: ./.github/actions/context

  build:
    runs-on: ubuntu-latest
    if: inputs.build
    needs: [context]
    permissions:
      packages: write
    outputs:
      cosign_public_key: ${{ steps.build.outputs.cosign_public_key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - name: Build Connaisseur
        id: build
        uses: ./.github/actions/build
        with:
          image_registry: ${{ needs.context.outputs.build_registry }}
          image_repo: ${{ needs.context.outputs.build_repo }}
          image_tag: ${{ needs.context.outputs.build_tag }}
          ref_tags: ${{ needs.context.outputs.ref_tags }}
          image_labels: ${{ needs.context.outputs.build_labels }}
          repo_owner: ${{ github.repository_owner }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          cosign_version: ${{ needs.context.outputs.cosign_version }}
          cosign_private_key: ${{ secrets.COSIGN_PRIVATE_KEY }}
          cosign_password: ${{ secrets.COSIGN_PASSWORD }}
