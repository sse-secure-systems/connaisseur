name: nightly

on:
  schedule:
    - cron: "30 1 * * *"

permissions: {}

defaults:
  run:
    shell: bash

env:
  SKIP_INTEGRATION_TESTS: 'non-required' # 'none', 'non-required', 'all'

jobs:
  conditionals:
    runs-on: ubuntu-latest
    outputs:
      skip_integration_tests: ${{ steps.conditionals.outputs.skip_integration_tests }}
    steps:
      - name: CI conditionals
        id: conditionals
        run: |
          echo "skip_integration_tests=${SKIP_INTEGRATION_TESTS}" >> ${GITHUB_OUTPUT}

  build:
    uses: ./.github/workflows/.reusable-build.yml
    permissions:
      packages: write
    secrets: inherit

  compliance:
    uses: ./.github/workflows/.reusable-compliance.yml
    permissions:
      id-token: write
      security-events: write
      actions: read
      checks: read
      contents: read
      deployments: read
      issues: read
      discussions: read
      packages: read
      pages: read
      pull-requests: read
      repository-projects: read
      statuses: read
    secrets: inherit

  sca:
    uses: ./.github/workflows/.reusable-sca.yml
    needs: [build]
    permissions:
      security-events: write
      packages: read
    secrets: inherit
    with:
      build_registry: ${{ needs.build.outputs.build_registry }}
      repo_owner: ${{ github.repository_owner }}
      build_image: ${{ needs.build.outputs.build_image }}

  trivy-released-image-scan:
    name: trivy image scan (latest released image)
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Scan
        uses: aquasecurity/trivy-action@8bd2f9fbda2109502356ff8a6a89da55b1ead252 # 0.9.1
        with:
          image-ref: ${{ needs.build.outputs.original_image }}
          format: "table"
          exit-code: "1"

  get-root:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: sh
    container:
      image: docker:stable
    steps:
      - name: Checkout code
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      - name: Build and test get-root utility
        run: |
          docker build -t get-root-key -f docker/Dockerfile.getRoot .
          docker run --rm get-root-key -i securesystemsengineering/testimage > output
          cat output | grep "KeyID: 76d211ff8d2317d78ee597dbc43888599d691dbfd073b8226512f0e9848f2508"
          cat output | grep "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEsx28WV7BsQfnHF1kZmpdCTTLJaWe"

  integration-test:
    uses: ./.github/workflows/.reusable-integration-test.yml
    needs: [conditionals, build]
    if: needs.conditionals.outputs.skip_integration_tests != 'all'
    permissions:
      packages: read
    secrets: inherit
    with:
      build_registry: ${{ needs.build.outputs.build_registry }}
      repo_owner: ${{ github.repository_owner }}
      build_image: ${{ needs.build.outputs.build_image }}
      skip_integration_tests: ${{ needs.conditionals.outputs.skip_integration_tests }}

  cleanup-registry:
    uses: ./.github/workflows/.reusable-cleanup-registry.yml
    needs: [build]
    secrets: inherit
