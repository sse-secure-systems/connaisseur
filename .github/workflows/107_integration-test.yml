name: integration-test

permissions: {}

on:
  workflow_call:
    inputs:
      build_registry:
        description: "Workflow build registry used for testing"
        type: string
      repo_owner:
        description: 'Name of repository owner, e.g. "inputs.repo_owner" for ghcr.io'
        type: string
      build_image_repository:
        description: "Workflow build image used for testing, excluding the tag i.e. registry + repository"
        type: string
      build_tag:
        description: "Tag of build image used for testing"
        type: string
      jobs_to_run:
        description: "Which sast jobs should be run: 'all', 'only-required', 'skip-all'?"
        type: string
        default: "all"

env:
  IMAGEPULLSECRET: dockerconfigjson-ghcr

jobs:
  integration-test:
    name: functional
    runs-on: ubuntu-latest
    if: inputs.jobs_to_run != 'skip-all'
    permissions:
      packages: read
    env:
      IMAGE: ${{ inputs.build_image_repository }}
      TAG: ${{ inputs.build_tag }}
    strategy:
      fail-fast: false
      matrix:
        integration-test-arg:
          [
            "regular",
            "notaryv1",
            "cosign",
            "namespaced",
            "deployment",
            "pre-config",
            "cert",
            "redis-cert",
            "alerting",
            "other-ns",
          ]
    services:
      alerting-endpoint:
        image: securesystemsengineering/alerting-endpoint
        ports:
          - 56243:56243
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Login with registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ inputs.build_registry }}
          username: ${{ inputs.repo_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/integration-test
        name: Integration test
        with:
          registry: ${{ inputs.build_registry }}
          username: ${{ inputs.repo_owner }}
          image: ${{ inputs.build_image_repository }}
          tag: ${{ inputs.build_tag }}
          k8s-version: "v1.31"
          test: ${{ matrix.integration-test-arg }}

  optional-integration-test:
    name: optional
    runs-on: ubuntu-latest
    if: |
      inputs.jobs_to_run == 'all'
    permissions:
      packages: read
    env:
      IMAGE: ${{ inputs.build_image_repository }}
      TAG: ${{ inputs.build_tag }}
    strategy:
      fail-fast: false
      matrix:
        integration-test-arg:
          [
            "load",
            "complexity",
            "upgrade",
          ]
    services:
      alerting-endpoint:
        image: securesystemsengineering/alerting-endpoint
        ports:
          - 56243:56243
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Login with registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ inputs.build_registry }}
          username: ${{ inputs.repo_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/integration-test
        name: Integration test
        with:
          registry: ${{ inputs.build_registry }}
          username: ${{ inputs.repo_owner }}
          image: ${{ inputs.build_image_repository }}
          tag: ${{ inputs.build_tag }}
          k8s-version: "v1.31"
          test: ${{ matrix.integration-test-arg }}

  k8s-versions:
    name: k8s versions
    runs-on: ubuntu-latest
    if: inputs.jobs_to_run != 'skip-all'
    permissions:
      packages: read
    env:
      IMAGE: ${{ inputs.build_image_repository }}
      TAG: ${{ inputs.build_tag }}
    strategy:
      fail-fast: false
      matrix:
        k8s-version: [
            "v1.29",
            "v1.30",
            "v1.31",
          ]
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Login with registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ inputs.build_registry }}
          username: ${{ inputs.repo_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/integration-test
        name: Integration test
        with:
          registry: ${{ inputs.build_registry }}
          username: ${{ inputs.repo_owner }}
          image: ${{ inputs.build_image_repository }}
          tag: ${{ inputs.build_tag }}
          k8s-version: ${{ matrix.k8s-version }}
          test: "pre-config"

  optional-k8s-versions:
    name: optional k8s versions
    runs-on: ubuntu-latest
    if: |
      inputs.jobs_to_run == 'all'
    permissions:
      packages: read
    env:
      IMAGE: ${{ inputs.build_image_repository }}
      TAG: ${{ inputs.build_tag }}
    strategy:
      fail-fast: false
      matrix:
        k8s-version: [
            "v1.26",
            "v1.27",
            "v1.28",
          ]
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Login with registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ inputs.build_registry }}
          username: ${{ inputs.repo_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/integration-test
        name: Integration test
        with:
          registry: ${{ inputs.build_registry }}
          username: ${{ inputs.repo_owner }}
          image: ${{ inputs.build_image_repository }}
          tag: ${{ inputs.build_tag }}
          k8s-version: ${{ matrix.k8s-version }}
          test: "pre-config"

  self-hosted-notary:
    name: self-hosted-notary
    runs-on: ubuntu-latest
    if: |
      inputs.jobs_to_run == 'all'
    permissions:
      packages: read
    env:
      IMAGE: ${{ inputs.build_image_repository }}
      TAG: ${{ inputs.build_tag }}
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Login with registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ inputs.build_registry }}
          username: ${{ inputs.repo_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install packages
        run: |
          sudo apt update
          sudo apt install notary expect
          sudo snap install yq
      - name: Setup notary signer service
        id: signer_service
        uses: ./.github/actions/notary-service
        with:
          service: signer
          port_map: 7899:7899
      - name: Setup notary server service
        id: server_service
        uses: ./.github/actions/notary-service
        with:
          service: server
          port_map: 4443:4443
          add_host: ${{ steps.signer_service.outputs.ip }}
      - name: Setup notary with data
        run: |
          sudo cp ./test/integration/self-hosted-notary/notary-service-container/server/notary.crt /usr/local/share/ca-certificates/notary_root_ca.crt
          sudo update-ca-certificates

          sudo  -- sh -c "echo '${{ steps.server_service.outputs.ip }}       notary.server' >> /etc/hosts"

          ./test/integration/self-hosted-notary/notary-service-container/notary_init.sh
          docker pull docker.io/securesystemsengineering/testimage:self-hosted-notary-signed
          DIGEST=$(docker images --digests | grep self-hosted-notary-signed | awk '{print $3}')
          export DIGEST_WITHOUT_PREFIX=$(echo ${DIGEST#sha256:})
          ./test/integration/self-hosted-notary/notary-service-container/notary_addhash.sh ${DIGEST_WITHOUT_PREFIX}
      - uses: ./.github/actions/integration-test
        name: Integration test
        with:
          registry: ${{ inputs.build_registry }}
          username: ${{ inputs.repo_owner }}
          image: ${{ inputs.build_image_repository }}
          tag: ${{ inputs.build_tag }}
          k8s-version: "v1.31"
          test: "self-hosted-notary"
        env:
          NOTARY_IP: ${{ steps.server_service.outputs.ip }}
